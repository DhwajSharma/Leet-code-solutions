/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head ) return head;
        ListNode* odd = head;
        ListNode* even = head->next;
        ListNode* odd_head = head;
        ListNode* even_head = head->next;
        
        while(even && even->next){// till even or even->next is not null
            
            odd->next = odd->next->next; // updating the links
            even->next = even->next->next;
            odd = odd->next;//updating odd and even values to there next values
            even = even->next;
        }
        
        odd->next = even_head;// pointing odd linked lists tail to even linked lists head
        return head;
    }
};
